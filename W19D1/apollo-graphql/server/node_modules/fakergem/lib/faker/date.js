"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var DateFaker = /** @class */ (function () {
    function DateFaker(faker) {
        this.faker = faker;
    }
    DateFaker.prototype.between = function (from, to) {
        from = this.getDateObject(from);
        to = this.getDateObject(to);
        var fromMilliseconds = from.getTime();
        var toMilliseconds = to.getTime();
        var offset = this.faker.Number.between(0, toMilliseconds - fromMilliseconds);
        var date = new Date(fromMilliseconds + offset);
        return this.getDateObject(date);
    };
    DateFaker.prototype.betweenExcept = function (from, to, except) {
        from = this.getDateObject(from);
        to = this.getDateObject(to);
        except = this.getDateObject(except);
        var date = this.between(from, to);
        while (this.datesAreEqual(date, except)) {
            date = this.between(from, to);
        }
        return this.getDateObject(date);
    };
    DateFaker.prototype.forward = function (days) {
        if (days === void 0) { days = 365; }
        var from = this.daysFromNow(1);
        var to = this.daysFromNow(days);
        var date = this.between(from, to);
        return this.getDateObject(date);
    };
    DateFaker.prototype.backward = function (days) {
        if (days === void 0) { days = 365; }
        var from = this.daysFromNow(-days);
        var to = this.daysFromNow(-1);
        var date = this.between(from, to);
        return this.getDateObject(date);
    };
    DateFaker.prototype.birthday = function (minAge, maxAge) {
        if (minAge === void 0) { minAge = 18; }
        if (maxAge === void 0) { maxAge = 65; }
        var from = new Date();
        from.setFullYear(from.getFullYear() - maxAge);
        var to = new Date();
        to.setFullYear(to.getFullYear() - minAge);
        var date = this.between(from, to);
        return this.getDateObject(date);
    };
    DateFaker.prototype.getDateObject = function (date) {
        if (typeof date === 'string') {
            return new Date(Date.parse(date));
        }
        date.setHours(0, 0, 0, 0);
        return date;
    };
    DateFaker.prototype.datesAreEqual = function (date1, date2) {
        return (date1.getFullYear() === date2.getFullYear() &&
            date1.getMonth() === date2.getMonth() &&
            date1.getDate() === date2.getDate());
    };
    DateFaker.prototype.daysFromNow = function (n) {
        var d = new Date();
        d.setDate(d.getDate() + n);
        d.setHours(0, 0, 0, 0);
        return d;
    };
    return DateFaker;
}());
exports.DateFaker = DateFaker;
