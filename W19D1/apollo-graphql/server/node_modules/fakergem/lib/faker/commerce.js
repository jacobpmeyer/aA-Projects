"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var commerce_json_1 = __importDefault(require("../data/commerce.json"));
var Commerce = /** @class */ (function () {
    function Commerce(faker) {
        this.faker = faker;
    }
    Commerce.prototype.color = function () {
        return this.faker.Color.colorName();
    };
    Commerce.prototype.department = function (max, fixedAmount) {
        if (max === void 0) { max = 3; }
        if (fixedAmount === void 0) { fixedAmount = false; }
        var num = fixedAmount ? max : this.faker.Number.between(1, max);
        var categories = this.buildCategories(num);
        return num > 1 ? this.mergeCategories(categories) : categories[0];
    };
    Commerce.prototype.productName = function () {
        return [
            this.faker.Random.element(commerce_json_1.default.productNames.adjective),
            this.faker.Random.element(commerce_json_1.default.productNames.material),
            this.faker.Random.element(commerce_json_1.default.productNames.product),
        ].join(' ');
    };
    Commerce.prototype.price = function (range) {
        if (range === void 0) { range = { min: 0.0, max: 100.0 }; }
        var n = this.faker.Number.between(range.min, range.max);
        return (Math.floor(n * 100) / 100.0).toFixed(2);
    };
    Commerce.prototype.promotionCode = function (digits) {
        if (digits === void 0) { digits = 6; }
        return [
            this.faker.Random.element(commerce_json_1.default.promotionCodes.adjective),
            this.faker.Random.element(commerce_json_1.default.promotionCodes.noun),
            this.faker.Number.number(digits).toLocaleString('fullwide', { useGrouping: false }),
        ].join('');
    };
    Commerce.prototype.buildCategories = function (num) {
        var categories = [];
        while (categories.length < num) {
            var category = this.faker.Random.element(commerce_json_1.default.departments);
            if (categories.indexOf(category) < 0) {
                categories.push(category);
            }
        }
        return categories;
    };
    Commerce.prototype.mergeCategories = function (categories) {
        var separator = ' & ';
        var commaSeparated = categories.slice(0, -1).join(', ');
        var lastCategory = categories.slice(-1);
        return [commaSeparated, lastCategory].join(separator);
    };
    return Commerce;
}());
exports.Commerce = Commerce;
