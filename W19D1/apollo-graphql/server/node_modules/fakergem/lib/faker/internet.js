"use strict";
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var internet_json_1 = __importDefault(require("../data/internet.json"));
// 0-9, a-z
var CHARACTERS = '0123456789abcdefghijklmnopqrstuvwxyz'.split('');
var SYMBOLS = ['!', '@', '#', '$', '%', '^', '&', '*'];
var PRIVATE_NET_REGEX = [
    /^10\./,
    /^100\.(6[4-9]|[7-9]\d|1[0-1]\d|12[0-7])\./,
    /^127\./,
    /^169\.254\./,
    /^172\.(1[6-9]|2\d|3[0-1])\./,
    /^192\.0\.0\./,
    /^192\.168\./,
    /^198\.(1[8-9])\./,
];
var RESERVED_NETS_REGEX = [
    /^0\./,
    /^192\.0\.2\./,
    /^192\.88\.99\./,
    /^198\.51\.100\./,
    /^203\.0\.113\./,
    /^(22[4-9]|23\d)\./,
    /^(24\d|25[0-5])\./,
];
function privateNetChecker(addr) {
    return PRIVATE_NET_REGEX.some(function (x) { return addr.match(x); });
}
function reservedNetChecker(addr) {
    return __spreadArrays(PRIVATE_NET_REGEX, RESERVED_NETS_REGEX).some(function (x) { return addr.match(x); });
}
var Internet = /** @class */ (function () {
    function Internet(faker) {
        this.faker = faker;
    }
    Internet.prototype.email = function (name) {
        if (name === void 0) { name = null; }
        return [this.userName(name), this.domainName()].join('@');
    };
    Internet.prototype.freeEmail = function (name) {
        if (name === void 0) { name = null; }
        return [this.userName(name), this.faker.Random.element(internet_json_1.default.freeEmails)].join('@');
    };
    Internet.prototype.safeEmail = function (name) {
        if (name === void 0) { name = null; }
        return [this.userName(name), "example." + this.faker.Random.element(['org', 'com', 'net'])].join('@');
    };
    Internet.prototype.userName = function (specifier, separators) {
        if (specifier === void 0) { specifier = null; }
        if (separators === void 0) { separators = null; }
        var userNameSeparator = this.faker.Random.element(separators || ['.', '_']);
        if (typeof specifier === 'string') {
            var specifiers = (specifier.match(/\w+/g) || []).map(function (x) { return x; });
            return this.faker.Random.assortment(specifiers, specifiers.length)
                .join(userNameSeparator)
                .toLowerCase();
        }
        var firstName = this.faker.Name.firstName();
        var lastName = this.faker.Name.lastName();
        return this.faker.Random.element([firstName, [firstName, lastName].join(userNameSeparator)]).toLowerCase();
    };
    Internet.prototype.password = function (minLength, maxLength, mixCase, specialChars) {
        var _this = this;
        if (minLength === void 0) { minLength = 8; }
        if (maxLength === void 0) { maxLength = 16; }
        if (mixCase === void 0) { mixCase = true; }
        if (specialChars === void 0) { specialChars = false; }
        var diffLength = maxLength - minLength;
        var extraCharacters = this.faker.Number.between(0, diffLength);
        var chars = specialChars ? __spreadArrays(CHARACTERS, SYMBOLS) : CHARACTERS;
        return Array(minLength + extraCharacters)
            .fill(null)
            .reduce(function (result, _, index) {
            var c = _this.faker.Random.element(chars).toString();
            return result + (mixCase && index % 2 === 0 ? c.toUpperCase() : c);
        }, '');
    };
    Internet.prototype.domainName = function () {
        return [this.domainWord(), this.domainSuffix()].join('.');
    };
    Internet.prototype.fixUmlauts = function (value) {
        return (value || '')
            .replace(/ä/g, 'ae')
            .replace(/ö/g, 'oe')
            .replace(/ü/g, 'ue');
    };
    Internet.prototype.domainWord = function () {
        return this.faker.Name.lastName();
    };
    Internet.prototype.domainSuffix = function () {
        return this.faker.Random.element(internet_json_1.default.domainSuffixes);
    };
    Internet.prototype.ipV4Address = function () {
        return [
            this.faker.Number.between(2, 254),
            this.faker.Number.between(2, 254),
            this.faker.Number.between(2, 254),
            this.faker.Number.between(2, 254),
        ].join('.');
    };
    Internet.prototype.privateIPV4Address = function () {
        var addr;
        do {
            addr = this.ipV4Address();
        } while (!privateNetChecker(addr));
        return addr;
    };
    Internet.prototype.publicIPV4Address = function () {
        var addr;
        do {
            addr = this.ipV4Address();
        } while (reservedNetChecker(addr));
        return addr;
    };
    Internet.prototype.ipV4CIDR = function () {
        return this.ipV4Address() + "/" + this.faker.Number.between(1, 32);
    };
    Internet.prototype.ipV6Address = function () {
        var _this = this;
        return Array(8)
            .fill(null)
            .map(function (_) { return _this.faker.Number.between(4096, 65535).toString(16); })
            .join(':');
    };
    Internet.prototype.ipV6CIDR = function () {
        return this.ipV6Address() + "/" + this.faker.Number.between(1, 128);
    };
    Internet.prototype.macAddress = function (prefix) {
        var _this = this;
        if (prefix === void 0) { prefix = ''; }
        var prefixDigits = prefix
            .split(':')
            .filter(function (x) { return x; })
            .map(function (x) { return parseInt(x, 16); });
        var addressDigits = Array(6 - prefixDigits.length)
            .fill(null)
            .map(function (x) { return _this.faker.Number.between(0, 255); });
        return __spreadArrays(prefixDigits, addressDigits).map(function (x) { return x.toString(16); }).join(':');
    };
    Internet.prototype.url = function (host, path, scheme) {
        if (host === void 0) { host = null; }
        if (path === void 0) { path = null; }
        if (scheme === void 0) { scheme = 'http'; }
        host = host || this.domainName();
        path = path || "/" + this.userName();
        return scheme + "://" + host + path;
    };
    Internet.prototype.slug = function (words, glue) {
        if (words === void 0) { words = null; }
        if (glue === void 0) { glue = null; }
        return (words || this.faker.Lorem.words(2).join(' '))
            .replace(/\s+/g, glue || this.faker.Random.element(['-', '_', '.']))
            .toLowerCase();
    };
    return Internet;
}());
exports.Internet = Internet;
